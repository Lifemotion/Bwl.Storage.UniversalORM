Модуль Bwl.Storage.UniversalORM.Blob
Данный модуль предназначен для хранения объектов в хранилищах (БД,файлы, память). 
В модуле реализованы 3 интерфейса:
1) IBlobBinarySaver(интерфейс) -  преобразователь BLOB поля в поток и обратно.
	Свойства: 
		- SupportedTypes - возвращает перечислитель, нулевым элементом которого является обект Bitmap
	Методы:
		- ToBinary() - конвертирует BLOB в массив байт
		- FromBinary() - создает поток из массива байт и записывает в Bitmap

2) IBlobSaver (интерфейс) - Модуль для сохранения/загрузки потоков в реальное хранилище (файл, БД и т.д.)
	Методы:
		- Save() - сохраняет информацию о BLOB в файл
		- Load() - загружает объекты BLOB из JSON
		- Remove() - удаляет файлы

3) IBlobStorage(интерфейс) - модуль сохранения/загрузки/удаления BLOB
	Свойства:
		- BlobStreamSaver - возвращает массив преобразователей BLOB
		- BlobSaver - возвращает массив модулей для сохранения/загрузки потоков в хранилище
	Методы:
		- SaveBlobs() - сохраняет значения BLOB полей объекта в хранилище
		- LoadBlobs() - Загружает в BLOB поля объекта их значения
		- Remove() - удаляет файл BLOB по идентификатору

8 Классов:
1) BitmapBinarySaver - класс для работы с Bitmap
	Свойства:
		- SupportedTypes - возвращает массив, нулевым элементом которого является Bitmap
	Методы:
		- FromBinary() - создает поток из массива байт и формирует bitmap из данного потока
		- ToBinary() - преобразует заданный blob-объект в массив байтов

2) BytesBinarySaver - класс для работы с "байтовыми" данными
	Свойства:
		- SupportedTypes - возвращает массив, нулевым элементом которого является массив байтов
	Методы:
		- FromBinary() - возвращает заданный массив байтов(ничего не делает)
		- ToBinary() - преобразует заданный объект в массив байтов

3) FileBlobSaver - Класс для сохранения/загрузки/удалениыя BLOB на носителе
	Свойства:
		- RootDir - возвращает или задает корневую директорию
	Методы:
		- Load() - загружает данные BLOB из JSON-файла
		- GetPath() - формирует и возвращает путь
		- GetBlobFilePath() - возвращает путь к файлу, если указанный BLOB существует
		- Save() - сохраняет данные BLOB в файлы
		- Remove() - удаляет файлы-BLOB

4) MemorySaver - Класс для сохранения/загрузки/удаления BLOB в памяти
	Методы:
		- Load() - возвращает данные BLOB из списка по идентификатору
		- Save() - добавляет данные BLOB в список
		- Remove() - удаляет данные BLOB из списка по ID

5) TypeMembersTools
	Методы:
		- GetBLOBMemberNamesRecursive() - Рекурсивное формирование массива с названиями свойств и полей объекта данных
		- SetMemberValue() - устанавливает значение членов или свойств
		- GetMemberValue() - возвращает значение членов или свойств

6) BlobInfo - Хранит данные об одном поле BLOB объекта

7) ObjBlobInfo - Содержит данные всех BLOB полей в объекте

8) CommonBlobStorage - класс для работы с модулем
	Свойства:
		- BlobStreamSaver - возвращает массив преобразователей BLOB поля в поток и обратно
		- BlobSavers - возвращает массив модулей для сохранения/загрузки потоков в реальное хранилище 
	Методы:
		- AddSaver() - добавляет Saver в список
		- RemoveSaver() - удаляет Saver из списка
		- AddStreamSaver() - добавляет поток в список, если он ещё не добавлен
		- RemoveStreamSaver() - удаляет поток из списка, если он существует
		- AnalyzeType() - добавляет тип объекта и данные о нем в список, если он еще не существует.
		- LoadBlobs() - загружает в BLOB поля объекта их значения
		- Load() - загружает из хранилища данные по ID
		- SetBlobsValue() - загружает в BLOB значения
		- SaveBlobs() - сохраняет значения BLOB полей в хранилище
		- SaveToStream() - сохраняет данные в поток
		- Save() - сохраняет поток в хранилище данных
		- Remove() - удаляет файл с данными из хранилища по ID